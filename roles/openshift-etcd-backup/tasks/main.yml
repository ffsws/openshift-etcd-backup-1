---
- name: Create a namespace
  k8s:
    name: "{{ openshift_etcd_backup_namespace }}"
    api_version: v1
    kind: Namespace
    state: present

- name: Change default nodeSelector to masters
  command: "oc patch namespace {{ openshift_etcd_backup_namespace }} -p '{\"metadata\":{\"annotations\":{\"openshift.io/node-selector\":\"node-role.kubernetes.io/master=true\"}}}}'"

- name: Create CronJob for openshift-etcd-backup
  k8s:
    namespace: "{{ openshift_etcd_backup_namespace }}"
    state: present
    definition:
      kind: CronJob
      apiVersion: batch/v1beta1
      metadata:
        name: "{{ openshift_etcd_backup_job_name }}"
        namespace: "{{ openshift_etcd_backup_namespace }}"
      spec:
        schedule: "{{ openshift_etcd_backup_schedule }}"
        concurrencyPolicy: Forbid
        jobTemplate:
          spec:
            template:
              spec:
                containers:
                  - name: "{{ openshift_etcd_backup_job_name }}"
                    image: "{{ openshift_etcd_backup_image }}:{{ openshift_etcd_backup_image_tag }}"
                    securityContext:
                      privileged: true
                    command:
                      - "/bin/bash"
                      - "-c"
                      - "/script/backup.sh"
                    env:
                      - name: ETCDCTL_API
                        value: "3"
                    volumeMounts:
                      - name: cluster-etcd-config
                        mountPath: /etc/etcd
                        readOnly: true
                      - name: backupdir
                        mountPath: /backup
                      - name: backupscript
                        mountPath: /script
                nodeSelector:
                  "node-role.kubernetes.io/master": "true"
                restartPolicy: Never
                terminationGracePeriodSeconds: 30
                activeDeadlineSeconds: "{{ openshift_etcd_backup_deadline }}"
                dnsPolicy: ClusterFirst
                serviceAccountName: "{{ openshift_etcd_backup_job_service_account }}"
                serviceAccount: "{{ openshift_etcd_backup_job_service_account }}"
                volumes:
                  - name: cluster-etcd-config
                    hostPath:
                      path: /etc/etcd
                  - name: backupscript
                    configMap:
                      defaultMode: 0755
                      name: openshift-backup-script
                  - name: backupdir
                    persistentVolumeClaim:
                      claimName: etcd-backup

- name: Create PersistentVolumeClaim for openshift-etcd-backup
  k8s:
    namespace: "{{ openshift_etcd_backup_namespace }}"
    state: present
    definition:
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: etcd-backup
        namespace: "{{ openshift_etcd_backup_namespace }}"
      spec:
        storageClassName: glusterfs-storage
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: "{{ openshift_etcd_backup_storage_size }}"


- name: Create ConfigMap for openshift-etcd-backup
  k8s:
    namespace: "{{ openshift_etcd_backup_namespace }}"
    state: present
    definition:
      kind: ConfigMap
      apiVersion: v1
      metadata:
        name: openshift-backup-script
        namespace: "{{ openshift_etcd_backup_namespace }}"
      data:
        backup.sh: |
          #!/bin/bash
          BACKUP_DIR="/backup"
          ETCD_CONFIG_DIR="/etc/etcd"
          START_TIME=$(date +%Y%m%d%H%M)
          BACKUP_DIR_WITH_DATE=${BACKUP_DIR}/${START_TIME}
          ### Cleanup
          find $BACKUP_DIR -mtime +10 -delete
          ### Setup
          mkdir -p $BACKUP_DIR_WITH_DATE
          ### Backup config
          cp -a "${ETCD_CONFIG_DIR}" "${BACKUP_DIR_WITH_DATE}/${ETCD_CONFIG_BCK_DIR}"
          ### Backup etcd
          ETCD_EP=$(grep https.*2379 ${ETCD_CONFIG_DIR}/etcd.conf | cut -d '/' -f3 | head -1)
          ETCDCTL_API=3 etcdctl \
           --cert /etc/etcd/peer.crt --key /etc/etcd/peer.key --cacert /etc/etcd/ca.crt \
           --endpoints ${ETCD_EP} snapshot save ${BACKUP_DIR_WITH_DATE}/snapshot.db
          ### Zip it
          cd ${BACKUP_DIR_WITH_DATE}
          echo "Zipping"
          tar czf ${BACKUP_DIR}/backup-${START_TIME}.tar.gz * --warning=no-file-changed
          ### Cleanup
          rm -rf ${BACKUP_DIR_WITH_DATE}

- name: Create ServiceAccount for openshift-etcd-backup
  k8s:
    namespace: "{{ openshift_etcd_backup_namespace }}"
    state: present
    definition:
      kind: ServiceAccount
      apiVersion: v1
      metadata:
        namespace: "{{ openshift_etcd_backup_namespace }}"
        name: "{{ openshift_etcd_backup_job_service_account }}"
